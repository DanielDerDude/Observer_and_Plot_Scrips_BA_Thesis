[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\Daniel\Desktop\Bachelor_Arbeit\Testing\observer\build\bootloader\esp-idf\esptool_py && C:\Users\Daniel\.espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Users/Daniel/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/Daniel/Desktop/Bachelor_Arbeit/Testing/observer/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
In file included from C:/Users/Daniel/Desktop/Bachelor_Arbeit/Testing/observer/main/main.c:4:
c:\users\daniel\desktop\bachelor_arbeit\testing\observer\_components\timing_functions.h:15:23: warning: 'reset_systime' defined but not used [-Wunused-function]
   15 | static IRAM_ATTR void reset_systime(void){
      |                       ^~~~~~~~~~~~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable generic_gpio.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/Daniel/Desktop/Bachelor_Arbeit/Testing/observer/build/generic_gpio.bin
[7/8] cmd.exe /C "cd /D C:\Users\Daniel\Desktop\Bachelor_Arbeit\Testing\observer\build\esp-idf\esptool_py && C:\Users\Daniel\.espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Users/Daniel/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/Daniel/Desktop/Bachelor_Arbeit/Testing/observer/build/partition_table/partition-table.bin C:/Users/Daniel/Desktop/Bachelor_Arbeit/Testing/observer/build/generic_gpio.bin"
generic_gpio.bin binary size 0x2d0a0 bytes. Smallest app partition is 0x100000 bytes. 0xd2f60 bytes (82%) free.
[7/8] cmd.exe /C "cd /D C:\Users\Daniel\esp\esp-idf\components\esptool_py && C:\Users\Daniel\.espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/Daniel/esp/esp-idf -D SERIAL_TOOL=C:/Users/Daniel/.espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;C:/Users/Daniel/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/Daniel/Desktop/Bachelor_Arbeit/Testing/observer/build -P C:/Users/Daniel/esp/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM20 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 generic_gpio.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev2
Serial port COM20

A fatal error occurred: Could not open COM20, the port is busy or doesn't exist.
(could not open port 'COM20': PermissionError(13, 'Zugriff verweigert', None, 5))

FAILED: CMakeFiles/flash C:/Users/Daniel/Desktop/Bachelor_Arbeit/Testing/observer/build/CMakeFiles/flash 
cmd.exe /C "cd /D C:\Users\Daniel\esp\esp-idf\components\esptool_py && C:\Users\Daniel\.espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/Daniel/esp/esp-idf -D SERIAL_TOOL=C:/Users/Daniel/.espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;C:/Users/Daniel/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/Daniel/Desktop/Bachelor_Arbeit/Testing/observer/build -P C:/Users/Daniel/esp/esp-idf/components/esptool_py/run_serial_tool.cmake"
ninja: build stopped: subcommand failed.
